version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
    networks:
      - internal

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - internal
    depends_on:
      - postgres

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.0
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: ${KC_DB}
      KC_DB_URL_HOST: ${KC_DB_URL_HOST}
      KC_DB_URL_DATABASE: ${KC_DB_URL_DATABASE}
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
      USERS_DB_URL: ${USERS_DB_URL}
      USERS_DB_USER: ${USERS_DB_USER}
      USERS_DB_PASSWORD: ${USERS_DB_PASSWORD}
    volumes:
      - ./config/keycloak/providers:/opt/keycloak/providers
      - ./config/keycloak/realm-config:/opt/keycloak/data/import
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - internal

  user-ms:
    build: ./users
    container_name: user-ms
    environment:
      SERVICE_PORT: 8081
      DB_URL: ${USERS_DB_URL}
      DB_USER: ${USERS_DB_USER}
      DB_PASSWORD: ${USERS_DB_PASSWORD}
      KC_URL: ${KC_BASE_URL}
      KC_REALM: ${KC_REALM}
      ADMIN_CLIENT: ${KC_ADMIN_CLIENT}
      ADMIN_CLIENT_SECRET: ${KC_ADMIN_CLIENT_SECRET}
      AUTH_CLIENT: ${KC_AUTH_CLIENT}
      AUTH_CLIENT_SECRET: ${KC_AUTH_CLIENT_SECRET}
    networks:
      - internal
    depends_on:
      - postgres
      - keycloak

  restaurants-ms:
    build: ./restaurants
    container_name: restaurants-ms
    environment:
      SERVICE_PORT: 8082
      DB_URL: ${RESTURANTS_DB_URL}
      DB_USER: ${RESTURANTS_DB_USER}
      DB_PASSWORD: ${RESTURANTS_DB_PASSWORD}
      KC_URL: ${KC_BASE_URL}
      KC_REALM: ${KC_REALM}
    networks:
      - internal
    depends_on:
      - postgres
      - keycloak

  api-gw:
    build: ./apigw
    container_name: api-gw
    environment:
      SERVICE_PORT: 8083
      USERS_BASE_URL: http://user-ms:8081
      RESTAURANTS_BASE_URL: http://restaurants-ms:8082
    ports:
      - "8083:8083"
    depends_on:
      - user-ms
      - restaurants-ms
    networks:
      - internal

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge
